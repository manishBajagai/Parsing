{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","selectorValues","RollNumValue","text","addRollNumValue","e","preventDefault","setState","split","handleRollNumValueChange","value","target","this","style","marginLeft","paddingRight","type","placeholder","onChange","required","length","onClick","padding","removeRollNumValue","bind","lineHeight","map","index","paddingLeft","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEqBA,E,4MACnBC,MAAQ,CACNC,eAAgB,GAChBC,aAAc,GACdC,KAAM,kD,EAGRC,gBAAkB,SAACC,GACjBA,EAAEC,iBACF,EAAKC,UAAS,gBAAGN,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,aAAnB,MAAuC,CACnDD,eAAe,GAAD,mBAAMA,GAAN,YAAyBC,EAAaM,MAAM,OAC1DN,aAAc,Q,EAIlBO,yBAA2B,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MACtC,EAAKH,SAAS,CAAEL,aAAcQ,K,wDAGhC,WACEE,KAAKL,SAAS,CAAEN,eAAiBW,KAAKZ,MAAMC,eAAiB,O,oBAG/D,WACE,OACE,8BACE,iCACE,gCACE,qBAAIY,MAAO,CAAEC,WAAY,OAAzB,+DACqD,OAErD,oBAAID,MAAO,CAAEC,WAAY,OAAzB,iFAIA,oBAAID,MAAO,CAAEC,WAAY,OAAzB,2CAAqE,IACrE,uBACED,MAAO,CAAEE,aAAc,OAAQD,WAAY,OAC3CE,KAAK,OACLN,MAAOE,KAAKZ,MAAME,cAAgB,GAClCe,YAAY,8BACZC,SAAUN,KAAKH,yBACfU,UAAWP,KAAKZ,MAAMC,eAAemB,SACpC,IACH,uBACA,uBACA,wBACEJ,KAAK,SACLK,QAAST,KAAKR,gBACdS,MAAO,CAAEC,WAAY,QAASQ,QAAS,qBAHzC,oBAnBF,OA2BE,wBACEN,KAAK,SACLK,QAAST,KAAKW,mBAAmBC,KAAKZ,MACtCC,MAAO,CAAES,QAAS,qBAHpB,mBAOA,uBACA,uBACA,0BAEF,oBAAIT,MAAO,CAAEY,WAAY,OAAQX,WAAY,OAA7C,SACGF,KAAKZ,MAAMC,eAAeyB,KAAI,SAAChB,EAAOiB,GACrC,OACE,mCACE,kCACE,sCAAgB,IAChB,qBAAId,MAAO,CAAEe,YAAa,QAA1B,UACG,IADH,OAESlB,IAFgCiB,sB,GAvE5BE,IAAMC,WCUxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c12da846.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class App extends React.Component {\n  state = {\n    selectorValues: [],\n    RollNumValue: \"\",\n    text: \"The Sl No. and Roll Numbers are respectively :\",\n  };\n\n  addRollNumValue = (e) => {\n    e.preventDefault();\n    this.setState(({ selectorValues, RollNumValue }) => ({\n      selectorValues: [...selectorValues, ...RollNumValue.split(\",\")],\n      RollNumValue: \"\",\n    }));\n  };\n\n  handleRollNumValueChange = ({ target: { value } }) => {\n    this.setState({ RollNumValue: value });\n  };\n\n  removeRollNumValue() {\n    this.setState({ selectorValues: (this.state.selectorValues = []) });\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <div>\n            <h1 style={{ marginLeft: \"10%\" }}>\n              Copy Paste the following Input in the input box or{\" \"}\n            </h1>\n            <h2 style={{ marginLeft: \"15%\" }}>\n              5, 6, 9, 12, 18, 20, 25, 30, 32, 36, 37, 38, 40, 42, 45, 47, 49,\n              50\n            </h2>\n            <h3 style={{ marginLeft: \"35%\" }}>Enter the Roll Numbers here :</h3>{\" \"}\n            <input\n              style={{ paddingRight: \"20px\", marginLeft: \"40%\" }}\n              type=\"text\"\n              value={this.state.RollNumValue || \"\"}\n              placeholder=\"roll no. separated by comma\"\n              onChange={this.handleRollNumValueChange}\n              required={!this.state.selectorValues.length}\n            />{\" \"}\n            <br />\n            <br />\n            <button\n              type=\"button\"\n              onClick={this.addRollNumValue}\n              style={{ marginLeft: \"41.2%\", padding: \"5px 20px 5px 20px\" }}\n            >\n              Submit\n            </button>\n            &nbsp;\n            <button\n              type=\"button\"\n              onClick={this.removeRollNumValue.bind(this)}\n              style={{ padding: \"5px 20px 5px 20px\" }}\n            >\n              Reset\n            </button>\n            <br />\n            <br />\n            <hr />\n          </div>\n          <ol style={{ lineHeight: \"40px\", marginLeft: \"30%\" }}>\n            {this.state.selectorValues.map((value, index) => {\n              return (\n                <>\n                  <tbody>\n                    <li>&nbsp;</li>{\" \"}\n                    <td style={{ paddingLeft: \"20px\" }} key={index}>\n                      {\" \"}\n                      &nbsp;{value}\n                    </td>\n                  </tbody>\n                </>\n              );\n            })}\n          </ol>\n        </form>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}